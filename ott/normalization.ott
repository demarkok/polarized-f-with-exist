defns
  Nrm :: 'Nrm' ::=

  defn nf ( iN ) = iM :: :: NNorm :: ''  by

  -------------  :: NVar
  nf(na) = na

  nf(iP) = iQ
  ------------- :: ShiftU
  nf(↑iP) = ↑iQ

  nf(iP) = iQ    nf(iN) = iM
  -------------------------- :: Arrow
  nf(iP → iN) = iQ → iM

  nf(iN) = iN'    ord {pas} in iN' = pas'
  --------------------------------------- :: Forall
  nf(∀pas.iN) = ∀pas'.iN'


  defn nf ( iP ) = iQ :: :: PNorm :: ''  by

  ------------  :: PVar
  nf(pa) = pa

  nf(iN) = iM
  ------------- :: ShiftD
  nf(↓iN) = ↓iM

  nf(iP) = iP'    ord {nas} in iP' = nas'
  --------------------------------------- :: Exists
  nf(∃nas.iP) = ∃nas'.iP'

  defn nf ( uN ) = uM :: :: uNNorm :: ''  by

  --------------------------------  :: NUVar
  nf(nua[Δ]) = nua[Δ]

  defn nf ( uP ) = uQ :: :: uPNorm :: ''  by

  ----------------------------  :: PUVar
  nf(pua[Δ]) = pua[Δ]

