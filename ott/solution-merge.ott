defns
  SM :: 'SM' ::=


  defn usEntry1 & usEntry2 = usEntry3 :: :: USEM :: 'E'
  {{ com Unification Solution Entry Merge }} by

  --------------------------------------- :: PSupSup
  pua :≥ iP & pua :≥ iQ = pua :≥ iP ∨ iQ



  Ord fv iP ∪ fv iQ ⊨ uP ≥ iQ ⫤ us'
  ---------------------------------- :: PEqSup
  pua :≈ iP & pua :≥ iQ = pua :≈ iP
  

  Ord fv iP ∪ fv iQ ⊨ uQ ≥ iP ⫤ us'
  ---------------------------------- :: PSupEq
  pua :≥ iP & pua :≈ iQ = pua :≈ iQ

  ---------------------------------- :: PEqEq
  pua :≈ iP & pua :≈ iP = pua :≈ iP

  ---------------------------------- :: NEqEq
  nua :≈ iN & nua :≈ iN = nua :≈ iN



  defn us1 & us2 = us3 :: :: SM :: ''
  {{ com Merge unification solutions }} by

  ------------- :: Empty
   · & us = us

   (pua :≈ iP) ∊ us2
   us1 & (us2 \ pua) = us3
  ----------------------------------------- :: PEqEq
   (pua :≈ iP, us1) & us2 = (pua :≈ iP, us3)

   (pua :≥ iQ) ∊ us2       us1 & (us2 \ pua) = us3
  ------------------------------------------------------- :: PSupSup
   (pua :≥ iP, us1) & us2 = (pua :≥ iP ∨ iQ, us3)


   (pua :≈ iQ) ∊ us2     Ord fv iQ ∪ fv iP ⊨ uQ ≥ iP ⫤ us'
   us1 & (us2 \ pua) = us3
  ------------------------------------------------------- :: PSupEq
   (pua :≥ iP, us1) & us2 = (pua :≈ iQ, us3)


   (pua :≥ iQ) ∊ us2     Ord fv iQ ∪ fv iP ⊨ uP ≥ iQ ⫤ us'
   us1 & (us2 \ pua) = us3
  ------------------------------------------------------- :: PEqSup
   (pua :≈ iP, us1) & us2 = (pua :≈ iP, us3)


   (nua :≈ iN) ∊ us2 
   us1 & (us2 \ nua) = us3
  ----------------------------------------- :: NEqEq
   (nua :≈ iN, us1) & us2 = (nua :≈ iN, us3)
