defns
  SM :: 'SM' ::=

  defn usEntry1 & usEntry2 = usEntry3 :: :: E :: 'E'
  {{ com Unification Solution Entry Merge }}
  {{ tex [[ usEntry1 ]] ~ \& ~ [[ usEntry2 ]] = [[usEntry3]] }}
  by

  Γ ⊨ iP1 ∨ iP2 = iQ
  ----------------------------------------------------- :: SupSup
  (Γ ⊢ pua :≥ iP1) & (Γ ⊢ pua :≥ iP2) = (Γ ⊢ pua :≥ iQ)


  Γ;· ⊨ uP ≥ iQ ⫤ us'
  --------------------------------------------------- :: EqSup
  (Γ ⊢ pua :≈ iP) & (Γ ⊢ pua :≥ iQ) = (Γ ⊢ pua :≈ iP)
  

  Γ;· ⊨ uQ ≥ iP ⫤ us'
  --------------------------------------------------- :: SupEq
  (Γ ⊢ pua :≥ iP) & (Γ ⊢ pua :≈ iQ) = (Γ ⊢ pua :≈ iQ)

  --------------------------------------------------- :: PEqEq
  (Γ ⊢ pua :≈ iP) & (Γ ⊢ pua :≈ iP) = (Γ ⊢ pua :≈ iP)

  --------------------------------------------------- :: NEqEq
  (Γ ⊢ nua :≈ iN) & (Γ ⊢ nua :≈ iN) = (Γ ⊢ nua :≈ iN)


  defn us1 & us2 = us3 :: :: SM :: ''
  {{ com Merge unification solutions }} by

defns
  SWEAK :: 'SWEAK' ::=

  defn usEntry1 ⇒ usEntry2 :: :: E :: 'E'
  {{ com Weakening of unification solution entries }} by

  Γ ⊢ iP1 ≥ iP2
  ----------------------------------- :: SupSup
  (Γ ⊢ pua :≥ iP1) ⇒ (Γ ⊢ pua :≥ iP2)

  Γ ⊢ iP1 ≥ iP2
  ----------------------------------- :: EqSup
  (Γ ⊢ pua :≈ iP1) ⇒ (Γ ⊢ pua :≥ iP2)

  Γ ⊢ iP1 ≈ iP2
  ----------------------------------- :: EqEq
  (Γ ⊢ pua :≈ iP1) ⇒ (Γ ⊢ pua :≈ iP2)

  defn us1 ⇒ us2 :: :: S :: 'S'
  {{ com Weakening of unification solutions }} by
