embed {{ tex-preamble

% \colorlet{colorOne}{Yellow!50!Brown}
\colorlet{colorOne}{black}
\newcommand{\eqDOne}{ \mathcolor{colorOne}{ [[≈]]^{ \scaleto{[[≤]]}{3.5pt} } } } 
\newcommand{\eqDOnePos}{ \mathcolor{colorOne}{ [[≈]]^{ \scaleto{[[≤]]}{3.5pt} }_{+} } } 
\newcommand{\eqDOneNeg}{ \mathcolor{colorOne}{ [[≈]]^{ \scaleto{[[≤]]}{3.5pt} }_{-} } } 
\newcommand{\subDOne}{ \mathcolor{colorOne}{ [[≤]] } } 
\newcommand{\supDOne}{ \mathcolor{colorOne}{ [[≥]] } } 

}}

defns
  D1 :: 'D1' ::=

  defn Γ ⊢ iN ≈ iM :: :: Neq :: ''
  {{ com Negative equivalence }}
  {{ tex [[Γ]] [[⊢]] [[iN]] \eqDOne [[iM]] }} by

  Γ ⊢ iN ≤ iM   Γ ⊢ iM ≤ iN
  ------------------------- :: NDef
  Γ ⊢ iN ≈ iM 

  defn Γ ⊢ iP ≈ iQ :: :: Peq :: ''
  {{ com Positive equivalence }}
  {{ tex [[Γ]] [[⊢]] [[iP]] \eqDOne [[iQ]] }} by

  Γ ⊢ iP ≥ iQ   Γ ⊢ iQ ≥ iP
  --------------------- :: PDef
  Γ ⊢ iP ≈ iQ 

  defn Γ ⊢ iN ≤ iM :: :: Nsub :: ''
  {{ com Negative subtyping }}
  {{ tex [[Γ]] [[⊢]] [[iN]] \subDOne [[iM]] }} by

  ----------- :: NVar
  Γ ⊢ a⁻ ≤ a⁻ 

  Γ ⊢ iP ≈ iQ
  ------------ :: ShiftU
  Γ ⊢ ↑iP ≤ ↑iQ

  Γ ⊢ iP ≥ iQ    Γ ⊢ iN ≤ iM 
  -------------------------- :: Arrow
  Γ ⊢ iP → iN ≤ iQ → iM

  Γ, pbs ⊢ σ : {pas}    Γ, pbs ⊢ [σ] iN ≤ iM
  ---------------------------------------- :: Forall
  Γ ⊢ ∀pas.iN ≤ ∀pbs.iM

  defn Γ ⊢ iN ≤ iM :: :: Elemsub :: ''
  {{ com Elementary Subtyping }}
  {{ tex [[Γ]] [[⊢]] [[iN]] \subDOne [[iM]] }} by

  Γ, pas ⊢ iN ≤ iM
  ---------------------- :: EForallR
  Γ ⊢ ∀pas.iN ≤ ∀pas.iM


  iM ≠ ∀pbs.iM'  Γ ⊢ σ : {pas}     Γ ⊢ [σ]iN ≤ iM
  -------------------------------- :: EForallL
  Γ ⊢ ∀pas.iN ≤ iM


  defn Γ ⊢ iP ≥ iQ :: :: Psup :: ''
  {{ com Positive supertyping }}
  {{ tex [[Γ]] [[⊢]] [[iP]] \supDOne [[iQ]] }} by

  ------------- :: PVar
  Γ ⊢ a⁺ ≥ a⁺ 

  Γ ⊢ iN ≈ iM
  -------------- :: ShiftD
  Γ ⊢ ↓iN ≥ ↓iM

  Γ, nbs ⊢ σ : {nas}    Γ, nbs ⊢ [σ]iP ≥ iQ
  --------------------------------------- :: Exists
  Γ ⊢ ∃nas.iP ≥ ∃nbs.iQ

  defn Γ ⊢ iP ≥ iQ :: :: Elemsup :: ''
  {{ com Elementary Supertyping }}
  {{ tex [[Γ]] [[⊢]] [[iP]] \supDOne [[iQ]] }} by

  Γ, nas ⊢ iP ≥ iQ
  ---------------------- :: EExistsR
  Γ ⊢ ∃nas.iP ≥ ∃nas.iQ


  iQ ≠ ∃nbs.iQ'  Γ ⊢ σ : {nas}     Γ ⊢ [σ]iP ≥ iQ
  --------------------------------- :: EExistsL
  Γ ⊢ ∃nas.iP ≥ iQ


defns 
  D1S :: 'D1S' ::=

  defn Γ2 ⊢ σ1 ≈ σ2 : Γ1 :: :: SEq :: ''
  {{ com Equivalence of substitutions }}
  {{ tex [[Γ2]] [[⊢]] [[σ1]] \eqDOne [[σ2]] : [[Γ1]] }} by


  defn Γ ⊢ σ1 ≈ σ2 : varset :: :: SubsEq :: 'SubsEq'
  {{ com Equivalence of substitutions }}
  {{ tex [[Γ]] [[⊢]] [[σ1]] \eqDOne [[σ2]] : [[varset]] }} by

  defn Θ ⊢ uσ1 ≈ uσ2 : varset :: :: USubsEq :: 'USubsEq'
  {{ com Equivalence of unification substitutions }}
  {{ tex [[Θ]] [[⊢]] [[uσ1]] \eqDOne [[uσ2]] : [[varset]] }} by

  defn Γ ⊢ uσ1 ≈ uσ2 : varset :: :: USubsEqG :: 'USubsEqG'
  {{ com Equivalence of unification substitutions }}
  {{ tex [[Γ]] [[⊢]] [[uσ1]] \eqDOne [[uσ2]] : [[varset]] }} by

defns 
  D1C :: 'D1C' ::=

  defn Γ ⊢ Φ1 ≈ Φ2 :: :: CtxEq :: 'CtxEq'
  {{ com Equivalence of contexts }}
  {{ tex [[Γ]] [[⊢]] [[Φ1]] \eqDOne [[Φ2]] }} by
