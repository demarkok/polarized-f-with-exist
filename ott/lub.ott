defns
  LUB :: 'LUB' ::=

  defn Γ ⊨ iP1 ∨ iP2 = iQ  :: :: Nsub :: ''
  {{ com Least Upper Bound (Least Common Supertype) }} by

  
  ---------------- :: Var
  Γ ⊨ pa ∨ pa = pa


  Γ,· ⊨ nf(↓iN) ≈au nf(↓iM) ⫤ (Ξ, uP, aus1, aus2)
  -------------------------------------------------- :: Shift
  Γ ⊨ ↓iN ∨ ↓iM = ∃nas.[nas / ToList Ξ]uP

  % Γ ⊨ ↓iN ∨ ↓iM = ∃ nas . [nas/ToList Ξ] uP

  % {nas} ∩ fv iP2 = ∅    {nbs} ∩ fv iP1 = ∅
  Γ, {nas}, {nbs} ⊨ iP1 ∨ iP2 = iQ
  --------------------------------------- :: Exists
  Γ ⊨ ∃nas.iP1 ∨ ∃nbs.iP2 = iQ



  defn upgrade Γ ⊢ iP to Δ = iQ :: :: Up :: '' by

  Γ = Δ, pnas   {pnbs} are fresh    {pncs} are fresh 
  Δ, pnbs, pncs ⊨ [pnbs/pnas]iP ∨ [pncs/pnas]iP = iQ
  --------------------------------------------------- :: Upgrade
  upgrade Γ ⊢ iP to Δ = iQ 
